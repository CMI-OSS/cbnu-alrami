@mixin flicking {
  overflow-y: hidden;
  overflow-x: auto;
}

@mixin ellipsis($line: 1) {
  @if ($line == 1) {
    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
  }
}

@mixin hover-status($color, $decoration) {
  color: $color;
  text-decoration: $decoration;
}

@mixin position($position, $args: ()) {
  $offsets: top right bottom left;
  position: $position;

  @each $offset in $offsets {
    $index: index($args, $offset);

    @if $index {
      $next: nth($args, $index + 1);
      @if $next {
        #{$offset}: $next;
      } @else {
        @warn "Invalid value `#{$next}` for offset `#{$offset}`.";
      }
    }
  }
}

@mixin safe-area-position($position, $args: ()) {
  $offsets: top $safe-area-top-11 $safe-area-top-11-2, right $safe-area-right-11 $safe-area-right-11-2,
    bottom $safe-area-bottom-11 $safe-area-bottom-11-2, left $safe-area-left-11 $safe-area-left-11-2;

  position: $position;

  @each $offset in $offsets {
    $index: index($args, nth($offset, 1));

    @if $index {
      $next: nth($args, $index + 1);
      @if $next {
        #{nth($offset, 1)}: calc(#{$next} + #{nth($offset, 2)});
        #{nth($offset, 1)}: calc(#{$next} + #{nth($offset, 3)});
      } @else {
        @warn "Invalid value `#{$next}` for offset `#{nth($offset, 1)}`.";
      }
    }
  }
}
